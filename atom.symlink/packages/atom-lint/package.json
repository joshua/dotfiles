{
  "name": "atom-lint",
  "main": "./lib/atom-lint",
  "version": "0.11.3",
  "private": true,
  "description": "Generic code linting support, including RuboCop, flake8, JSHint, CoffeeLint, etc.",
  "repository": {
    "type": "git",
    "url": "https://github.com/yujinakayama/atom-lint"
  },
  "license": "MIT",
  "engines": {
    "atom": ">0.50.0"
  },
  "dependencies": {
    "season": "^1.0.2",
    "emissary": "^1.0.0",
    "lodash": "^2.4.1",
    "minimatch": "^0.2.14",
    "color": "^0.5.0",
    "xml2js": "^0.4.1"
  },
  "devDependencies": {
    "coffee-script": "latest",
    "coffeelint": "latest",
    "temp": "^0.7.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/yujinakayama/atom-lint.svg?branch=master)](https://travis-ci.org/yujinakayama/atom-lint)\n\n# Atom-Lint\n\nGeneric code linting support for [Atom](https://atom.io).\n\n![Screenshot](https://cloud.githubusercontent.com/assets/83656/2583539/7e1c25b0-b9d2-11e3-9549-ffe576b9a41e.png)\n\nAtom-Lint is currently in beta development.\n\n## Supported Linters\n\nMore linters will be supported in the future.\n\n* [RuboCop](https://github.com/bbatsov/rubocop) for Ruby\n* [flake8](https://flake8.readthedocs.org/) for Python\n* [HLint](http://community.haskell.org/~ndm/hlint/) for Haskell\n  (Installation of [language-haskell](https://atom.io/packages/language-haskell) package is required)\n* [JSHint](http://www.jshint.com/docs/) for JavaScript\n* [CoffeeLint](http://www.coffeelint.org/) for CoffeeScript\n* [gc](http://golang.org/cmd/gc/) for Go\n* [CSSLint](https://github.com/stubbornella/csslint) for CSS\n* [SCSS-Lint](https://github.com/causes/scss-lint) for SCSS\n* [puppet-lint](http://puppet-lint.com) for Puppet\n  (Installation of [language-puppet](https://atom.io/packages/language-puppet) package is required)\n* [ShellCheck](https://github.com/koalaman/shellcheck) for shell script\n* [Clang](http://clang.llvm.org) for C/C++/Objective-C\n* [rustc](http://www.rust-lang.org/) for Rust\n  (Installation of [language-rust](https://atom.io/packages/language-rust) package is required)\n\n## Features\n\n* Seamless integration with Atom as if it's a built-in package.\n* Code highlighting – you don't need to move your eyes from the code to see the violations.\n* Clean UI – it honors the colors of your favorite Atom theme.\n\n## Installation\n\n```bash\n$ apm install atom-lint\n```\n\n## Usage\n\nYour source will be linted on open and on save automatically,\nand the detected violations will be displayed as arrows in the editor.\nYou can see the detail of the violation by moving the cursor to it.\n\n## Keymaps\n\n* `Ctrl-Alt-L`: Global toggle\n* `Ctrl-Alt-[`: Move to Previous Violation\n* `Ctrl-Alt-]`: Move to Next Violation\n\nAlso you can customize keymaps by editing `~/.atom/keymap.cson` (choose **Open Your Keymap** in **Atom** menu):\n\n```coffeescript\n'.workspace':\n  'ctrl-alt-l': 'lint:toggle'\n'.editor':\n  'ctrl-alt-[': 'lint:move-to-previous-violation'\n  'ctrl-alt-]': 'lint:move-to-next-violation'\n```\n\nSee [Customizing Atom](https://atom.io/docs/latest/customizing-atom#customizing-key-bindings) for more details.\n\n## Configuration\n\nYou can configure Atom-Lint by editing `~/.atom/config.cson` (choose **Open Your Config** in **Atom** menu):\n\n```coffeescript\n# Some other settings...\n'atom-lint':\n  'ignoredNames': [\n    'tmp/**'\n  ]\n  'clang':\n    'path': '/path/to/bin/clang'\n    'headerSearchPaths': ['/path/to/include','/path2/to/include']\n  'coffeelint':\n    'path': '/path/to/bin/coffeelint'\n    'ignoredNames': [\n      'coffeelint/specific/excluded/file.coffee'\n    ]\n  'csslint':\n    'path': '/path/to/bin/csslint'\n  'flake8':\n    'path': '/path/to/bin/flake8'\n  'gc':\n    'path': '/path/to/bin/go'\n  'hlint':\n    'path': '/path/to/bin/hlint'\n  'jshint':\n    'path': '/path/to/bin/jshint'\n  'puppet-lint':\n    'path': '/path/to/bin/puppet-lint'\n  'rubocop':\n    'path': '/path/to/bin/rubocop'\n  'rustc':\n    'path': '/path/to/bin/rustc'\n  'scss-lint':\n    'path': '/path/to/bin/scss-lint'\n  'shellcheck':\n    'path': '/path/to/bin/shellcheck'\n```\n\n### Linter Executable Paths\n\n* `atom-lint.LINTER.path`\n\nBy default Atom-Lint automatically refers the environment variable `PATH` of your login shell\nif it's `bash` or `zsh`, and then invokes the command.\nThus, if you're using a language version manager such as [rbenv](https://github.com/sstephenson/rbenv),\nlinters need be installed in the default/global environment of the version manager\n(i.e. the environment where you opened a new terminal).\nIf you need to use a non-default executable, use this setting.\n\n### File Patterns to Ignore\n\n* `atom-lint.ignoredNames` (Global)\n* `atom-lint.LINTER.ignoredNames` (Per Linter)\n\nYou can specify lists of file patterns to disable linting.\nThe global patterns and the per linter patterns will be merged on evaluation\nso that you can make these lists DRY.\n\n```coffeescript\n'atom-lint':\n  'ignoredNames': [\n    'tmp/**'\n  ]\n  'rubocop':\n    'ignoredNames': [\n      'vendor/**'\n      'db/schema.rb'\n    ]\n```\n\nWith the above example, all of `tmp/**`, `vendor/**` and `db/schema.db` are ignored when RuboCop is active.\n\nThe pattern must be relative to the project root directory.\nThe pattern format is basically the same as the shell expansion and `.gitignore`.\nSee [`minimatch`](https://github.com/isaacs/minimatch) for more details.\n\n## Contributors\n\nHere's a [list](https://github.com/yujinakayama/atom-lint/graphs/contributors) of all contributors to Atom-Lint.\n\n## Changelog\n\nAtom-Lint's changelog is available [here](https://github.com/yujinakayama/atom-lint/blob/master/CHANGELOG.md).\n\n## License\n\nCopyright (c) 2014 Yuji Nakayama\n\nSee the [LICENSE.txt](https://github.com/yujinakayama/atom-lint/blob/master/LICENSE.txt) for details.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/yujinakayama/atom-lint/issues"
  },
  "homepage": "https://github.com/yujinakayama/atom-lint",
  "_id": "atom-lint@0.11.3",
  "dist": {
    "shasum": "a04495c41a658853cc30b155c44e9bd333b27892"
  },
  "_resolved": "/var/folders/8b/6ky0h1n11qn_n52jpnsy03m40000gq/T/d-114322-21828-1h8z81m/package.tgz",
  "_from": "/var/folders/8b/6ky0h1n11qn_n52jpnsy03m40000gq/T/d-114322-21828-1h8z81m/package.tgz"
}
