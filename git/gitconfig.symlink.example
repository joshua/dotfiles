# Sample gitconfig
#

[hub]
    protocol = https

[user]
    name = AUTHORNAME
    email = AUTHOREMAIL

[credential]
    helper = /opt/boxen/bin/boxen-git-credential

[color]
    diff   = auto
    status = auto
    branch = auto
    ui     = true

[core]
    excludesfile = /opt/boxen/config/git/gitignore
    editor = subl -n -w

[apply]
    whitespace = nowarn

[mergetool]
    keepBackup = false

[difftool]
    prompt = false

[help]
    autocorrect = 1

[push]
    # See `git help config` (search for push.default)
    # for more information on different options of the below setting.
    #
    # Setting to git 2.0 default to surpress warning message
    default = simple

[alias]
    la = "!git config -l | grep alias | cut -c 7-"

    promote = !$DOTFILES/bin/git-promote
    wtf     = !$DOTFILES/bin/git-wtf
    rank-contributers = !$DOTFILES/bin/git-rank-contributers
    count   = !git shortlog -sn

    co   = checkout
    cp   = cherry-pick
    st   = status -s
    cl   = clone
    ci   = commit
    br   = branch
    diff = diff --word-diff
    dc   = diff --cached

    sl   = stash list
    sa   = stash apply
    ss   = stash save

    r    = reset
    r1   = reset HEAD^
    r2   = reset HEAD^^
    rh   = reset --hard
    rh1  = reset HEAD^ --hard
    rh2  = reset HEAD^^ --hard

    # List commits in short form, with colors and branch/tag annotations
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

    # List commits showing changed files
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # List with no colors
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"

    # List oneline commits showing dates
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

    # List oneline commits showing relative dates
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative

    # Default look for short git log
    le = log --oneline --decorate

    # Show the history of a file, with diffs
    filelog = log -u
    fl      = log -u

    # Show modified files in last commit
    dl = "!git ll -1"

    # Show a diff last commit
    dlc = diff --cached HEAD^

    # Show content (full diff) of a commit given a revision
    diffr  = "!f() { git diff "$1"^.."$1"; }; f"
    dr     = "!f() { git diff "$1"^.."$1"; }; f"

    # List changes of a commit given a revision
    lc = "!f() { git ll "$1"^.."$1"; }; f"

    # Find a file path in codebase
    f = "!git ls-files | grep -i"

    # Search/grep your entire codebase for a string:
    grep = grep -Ii
    gr   = grep -Ii
